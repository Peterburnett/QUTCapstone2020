{"version":3,"sources":["../src/paypal.js"],"names":["define","button","buttondata","paypal","Buttons","createOrder","data","actions","order","create","intent","payer","name","given_name","userfirstname","surname","userlastname","email_address","useremail","purchase_units","amount","currency_code","currency","value","breakdown","item_total","items","coursefullname","unit_amount","sku","courseid","quantity","category","custom_id","custom","order_application_context","shipping_preference","onApprove","capture","then","details","alert","onCancel","style","color","buttoncolour","size","buttonsize","shape","buttonshape","render"],"mappings":"AAyBAA,OAAM,gCAAC,EAAD,CAAK,UAAW,CAClB,MAAO,CACHC,MAAM,CAAE,gBAASC,CAAT,CAAqB,CACzBC,MAAM,CAACC,OAAP,CAAe,CACXC,WAAW,CAAE,qBAASC,CAAT,CAAeC,CAAf,CAAwB,CAErC,MAAOA,CAAAA,CAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB,CACxBC,MAAM,CAAE,SADgB,CAExBC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,UAAU,CAAEX,CAAU,CAACY,aADrB,CAEFC,OAAO,CAAKb,CAAU,CAACc,YAFrB,CADH,CAKHC,aAAa,CAAEf,CAAU,CAACgB,SALvB,CAFiB,CASxBC,cAAc,CAAE,CAAC,CACbC,MAAM,CAAE,CACJC,aAAa,CAAEnB,CAAU,CAACoB,QADtB,CAEJC,KAAK,CAAErB,CAAU,CAACkB,MAFd,CAGJI,SAAS,CAAE,CACPC,UAAU,CAAE,CACRJ,aAAa,CAAEnB,CAAU,CAACoB,QADlB,CAERC,KAAK,CAAErB,CAAU,CAACkB,MAFV,CADL,CAHP,CADK,CAWbM,KAAK,CAAE,CAAC,CACJd,IAAI,CAAEV,CAAU,CAACyB,cADb,CAEJC,WAAW,CAAE,CACTP,aAAa,CAAEnB,CAAU,CAACoB,QADjB,CAETC,KAAK,CAAErB,CAAU,CAACkB,MAFT,CAFT,CAMJS,GAAG,CAAE3B,CAAU,CAAC4B,QANZ,CAOJC,QAAQ,CAAE,GAPN,CAQJC,QAAQ,CAAE,eARN,CAAD,CAXM,CAqBbC,SAAS,CAAE/B,CAAU,CAACgC,MArBT,CAAD,CATQ,CAgCxBC,yBAAyB,CAAE,CACvBC,mBAAmB,CAAE,aADE,CAhCH,CAArB,CAoCN,CAvCU,CAwCXC,SAAS,CAAE,mBAAS/B,CAAT,CAAeC,CAAf,CAAwB,CAE/B,MAAOA,CAAAA,CAAO,CAACC,KAAR,CAAc8B,OAAd,GAAwBC,IAAxB,CAA6B,SAASC,CAAT,CAAkB,CAElDC,KAAK,CAAC,4BAA8BD,CAAO,CAAC7B,KAAR,CAAcC,IAAd,CAAmBC,UAAlD,CAGR,CALM,CAMV,CAhDU,CAiDX6B,QAAQ,CAAE,mBAAe,CAExB,CAnDU,CAoDXC,KAAK,CAAE,CACHC,KAAK,CAAE1C,CAAU,CAAC2C,YADf,CAEHC,IAAI,CAAG5C,CAAU,CAAC6C,UAFf,CAGHC,KAAK,CAAE9C,CAAU,CAAC+C,WAHf,CApDI,CAAf,EAyDGC,MAzDH,CAyDU,0BAzDV,CA2DH,CA7DE,CA+DV,CAhEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to display a paypal button that a student can click to make a purchase.\n *\n * @package    paymentgateway_paypal\n * @module     paymentgateway_paypal\\paypal\n * @copyright  MAHQ\n * @author     Haruki Nakagawa\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function() {\n    return {\n        button: function(buttondata) {\n            paypal.Buttons({\n                createOrder: function(data, actions) {\n                // This function sets up the details of the transaction, including the amount and line item details.\n                return actions.order.create({\n                    intent: 'CAPTURE',\n                    payer: {\n                        name: {\n                            given_name: buttondata.userfirstname,\n                            surname:    buttondata.userlastname\n                        },\n                        email_address: buttondata.useremail\n                    },\n                    purchase_units: [{\n                        amount: {\n                            currency_code: buttondata.currency,\n                            value: buttondata.amount,\n                            breakdown: {\n                                item_total: {\n                                    currency_code: buttondata.currency,\n                                    value: buttondata.amount\n                                }\n                            }\n                        },\n                        items: [{\n                            name: buttondata.coursefullname,\n                            unit_amount: {\n                                currency_code: buttondata.currency,\n                                value: buttondata.amount\n                            },\n                            sku: buttondata.courseid,\n                            quantity: '1',\n                            category: 'DIGITAL_GOODS'\n                        }],\n                        custom_id: buttondata.custom\n                    }],\n                    order_application_context: {\n                        shipping_preference: 'NO_SHIPPING'\n                    }\n                });\n                },\n                onApprove: function(data, actions) {\n                    // This function captures the funds from the transaction.\n                    return actions.order.capture().then(function(details) {\n                        // This function shows a transaction success message to your buyer.\n                        alert('Transaction completed by ' + details.payer.name.given_name);\n                        // Redirect to purchased course page goes here!!!\n                        // Use similar process as enrol_paypal with return.php.\n                    });\n                },\n                onCancel: function(data) {\n                // Redirect to course purchase page when cancelled?\n                },\n                style: {\n                    color: buttondata.buttoncolour,\n                    size:  buttondata.buttonsize,\n                    shape: buttondata.buttonshape\n                }\n            }).render('#paypal-button-container');\n            //This function displays Smart Payment Buttons on your web page.\n        }\n    };\n});\n"],"file":"paypal.min.js"}